name: CI Pipeline

on:
  push:
    branches: [main, auth, backend]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting (warnings allowed, errors block)
        run: npm run lint
        continue-on-error: false  # ESLint errors will fail the build, warnings won't
        
      - name: Run type checking (strict)
        run: npm run typecheck

      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          # Supabase Configuration
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}

          # WorkOS Configuration
          WORKOS_CLIENT_ID: ${{ secrets.WORKOS_CLIENT_ID }}
          WORKOS_API_KEY: ${{ secrets.WORKOS_API_KEY }}
          WORKOS_REDIRECT_URI: ${{ secrets.WORKOS_REDIRECT_URI }}
          WORKOS_COOKIE_PASSWORD: ${{ secrets.WORKOS_COOKIE_PASSWORD }}

          # Redis Configuration
          UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
          UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}

          # App Configuration
          NEXT_PUBLIC_APP_URL: http://localhost:3000
          SESSION_COOKIE_NAME: b2b_session_test
          SESSION_DURATION_HOURS: 24
          NODE_ENV: test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_WORKOS_CLIENT_ID: ${{ secrets.WORKOS_CLIENT_ID }}

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run dependency vulnerability scan
        run: npm audit --audit-level=moderate

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD

  quality-gate:
    name: Professional Quality Gate
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Professional quality gate passed
        run: |
          echo "✅ Professional B2B Quality Standards Met!"
          echo ""
          echo "🔒 SECURITY: All security scans passed"
          echo "🚫 RUNTIME: No runtime errors or crashes detected" 
          echo "📦 BUILD: Production build successful"
          echo "🧪 TESTS: All tests passing on Node.js 18.x and 20.x"
          echo "📝 TYPES: TypeScript strict mode compilation successful"
          echo "⚡ PERFORMANCE: Code quality focused on business impact"
          echo ""
          echo "ℹ️  Style warnings are informational and don't block deployment"
          echo "ℹ️  Focus: Security > Runtime Correctness > Business Logic > Style"
